<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yibu.yibuJudge.mapper.ContestMapper">
    <insert id="insertContest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO contest (name, description, start_time, end_time, organizer, create_time, update_time)
        VALUES (#{name}, #{description}, #{startTime}, #{endTime}, #{organizer}, #{createTime}, #{updateTime})
    </insert>
    <insert id="insertContestProblems">
        insert into contest_problems (title, contest_id, problem_id, problem_order, score)
        values
        <foreach collection="contestProblems" item="item" separator=",">
            (#{item.title}, #{item.contestId}, #{item.problemId}, #{item.problemOrder}, #{item.score})
        </foreach>
    </insert>
    <insert id="insertContestLeaderboard">
        insert into contest_leaderboard(id, contest_id, user_id, score, details, create_time, update_time)
        VALUES (#{id}, #{contestId}, #{userId}, #{score}, #{details}, #{createTime}, #{updateTime})
    </insert>
    <update id="updateContest">
        update contest
        <set>
            <if test="name!= null and name!=''">
                name = #{name},
            </if>
            <if test="description!= null and description!=''">
                description = #{description},
            </if>
            <if test="startTime!= null">
                start_time = #{startTime},
            </if>
            <if test="endTime!= null">
                end_time = #{endTime},
            </if>
            <if test="organizer!= null and organizer!=''">
                organizer = #{organizer},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateContestRank">
        UPDATE contest_leaderboard
        SET
            score = score + #{score},
            details = JSON_SET(
                    COALESCE(details, '{}'),
                    concat('$.t', #{problemOrder}), JSON_OBJECT('time', #{time}, 'attempts', #{warnCount}, 'penaltyTime', #{penaltyTime})
                ),
            finish_time = #{interval},
            penalty = #{penalty},
            update_time = NOW()
        WHERE
            contest_id = #{contestId} AND user_id = #{userId};
    </update>


    <select id="getContestProblemsByContestId" resultType="java.lang.Integer">
        select problem_id from contest_problems where contest_id = #{contestId}
    </select>
    <select id="listContest" resultType="com.yibu.yibuJudge.model.entity.Contest">
        SELECT * FROM contest
        <where>
            <if test="preparation == true">
                end_time &gt;= NOW()
            </if>
            <if test="preparation == false">
                end_time &lt;= NOW()
            </if>
        </where>
        order by start_time asc
    </select>
    <select id="getRankListByContestId" resultType="com.yibu.yibuJudge.model.entity.ContestLeaderboard">
        select id, contest_id, user_id, score, finish_time, details, create_time, update_time, penalty,
        RANK() OVER (PARTITION BY contest_id ORDER BY score DESC, finish_time ASC) as `rank`
        from contest_leaderboard
        <where>
            <if test="contestId!= null">
                contest_id = #{contestId}
            </if>
        </where>
        order by score desc, finish_time asc
    </select>
    <select id="getRankByContestIdAndUserId" resultType="com.yibu.yibuJudge.model.entity.ContestLeaderboard">
        select id, contest_id, user_id, score, finish_time, details, create_time, update_time, penalty,
               RANK() OVER (PARTITION BY contest_id ORDER BY score DESC, finish_time ASC) as `rank`
        from contest_leaderboard where contest_id = #{contestId} and user_id = #{userId}
    </select>
</mapper>